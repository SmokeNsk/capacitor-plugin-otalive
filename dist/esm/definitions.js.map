{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { Plugin, PluginListenerHandle } from '@capacitor/core';\n\n// Интерфейс данных для событий\nexport interface OTAPluginEvents {\n  newVersionAvailable: { version: string; description: string };\n  updateFailed: { error: string };\n  updateSuccess: object|undefined;\n  updateRolledBack: object|undefined;\n}\n\n// Интерфейс данных для вызова чекпоинта\nexport interface CheckpointData {\n  name: string;\n  executionTime: number;\n}\n\n// Интерфейс плагина\nexport interface OtaLiveUpdaterPlugin extends Plugin {\n  // Метод для применения обновления\n  applyUpdate(): Promise<void>;\n\n  // Метод для отката обновления\n  rollBackUpdate(): Promise<void>;\n\n  // Метод для вызова чекпоинта\n  checkpoint(data: CheckpointData): Promise<void>;\n\n  // Подписка на события\n  addListener(\n    eventName: 'newVersionAvailable',\n    listenerFunc: (data: { version: string; description: string }) => void\n  ): Promise<PluginListenerHandle> ;\n\n  addListener(\n    eventName: 'updateFailed',\n    listenerFunc: (data: { error: string }) => void\n  ): Promise<PluginListenerHandle> ;\n\n  addListener(\n    eventName: 'updateSuccess',\n    listenerFunc: (data: object) => void\n  ): Promise<PluginListenerHandle> ;\n\n  addListener(\n    eventName: 'updateRolledBack',\n    listenerFunc: (data: object) => void\n  ): Promise<PluginListenerHandle> ;\n}\n\n// Объявление плагина\ndeclare module '@capacitor/core' {\n  interface PluginRegistry {\n    OtaLiveUpdater: OtaLiveUpdaterPlugin;\n  }\n}"]}